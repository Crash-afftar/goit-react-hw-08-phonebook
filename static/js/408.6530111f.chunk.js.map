{"version":3,"file":"static/js/408.6530111f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","components/Loader/Loader.styled.jsx","pages/PhoneBook.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.search;\nexport const selectContactsList = state => state.contacts.items;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 80%;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 20px 10px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 20px;\n  background-color: #fff;\n  outline: none;\n  transition: all 0.5s ease 0s;\n\n  &:hover {\n    background-color: #d9dae0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 10px 20px;\n  margin: 0px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(20, 58, 46);\n  color: rgb(255, 255, 255);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.2;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: all 0.5s ease 0s;\n \n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: rgb(20, 58, 46);\n  }\n\n  &:active {\n    scale: 1.1  ;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\n\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  function handleSubmit(e)  {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const number  = form.number.value;\n    \n    if (contacts.find(el => el.number === number)) {\n      return toast.warn(`${name} is already in contacts.`);\n    } \n\n    dispatch(addContacts({ name, number }));\n    \n    form.reset();\n  };\n\n  return (\n    <><ToastContainer />\n    <Form title=\"Phonebook\" onSubmit={handleSubmit}>\n      <Label>\n        Name:\n      <Input        \n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([\\' -])[a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      </Label>\n      <Label>\n        Number:\n      <Input        \n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n      </Form>\n      </>\n  );\n};\n\nexport default ContactForm;\n\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 80%;\n  padding: 10px;\n  margin: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 5px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 15px;\n\n  background-color: #fff;\n  transition: 0.5s;\n\n  &:hover {\n    background-color: #d9dae0;\n  }\n`;\nexport const ButtonDelete = styled.button`\n  display: inline-block;\n  padding: 5px;\n\n  margin: 0;\n  border: none; \n  border-radius: 50%;\n  background-color: rgb(20, 58, 46);\n  color: rgb(255, 255, 255);\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.0;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: all 0.5s ease 0s;\n  \n\n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: rgb(255, 0, 0);\n  }\n\n\n  \n  &:active {\n    scale: 1.1;\n  }\n`;\n\nexport const WarningText = styled.h3`\n  margin: 0 auto;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { List, ListItem, ButtonDelete, WarningText } from './ContactList.styled';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  \n  const defaultMessage = contacts.length === 0;\n  return (\n      <>\n    <List>\n      {defaultMessage && (\n        <WarningText>There are currently no contacts in your Phonebook</WarningText>\n      )}\n\n      {contacts.map(({ name, number, id }) => (\n        <ListItem key={id}>\n          <span>{`${name}: ${number}`}</span>\n          <ButtonDelete\n            type=\"button\"\n            onClick={() => {  \n              dispatch(deleteContacts(id));\n            }}\n          >\n            X\n          </ButtonDelete>\n        </ListItem>\n      ))}\n      </List>\n      </>\n      );\n      \n};\n\nexport default ContactList;","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 50%;\n  padding: 0;\n    margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 15px;\n  background-color: #fff;\n  transition: 0.5s;\n  outline: none;\n\n  &:hover {\n    background-color: #d9dae0;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { Label, Input } from './ContactFilter.styled';\n\nconst ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n   \n      <Label htmlFor=\"filter\">Find contacts by name:\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChange}        \n      />\n    </Label>\n  );\n};\n\nexport default ContactFilter;\n","import styled from 'styled-components';\n\nexport const Loader = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  z-index: 10;`;","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactFilter from 'components/ContactFilter/ContactFilter';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader.styled';\n\nexport default function PhoneBookApp() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n  <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n      <ContactFilter />\n      {isLoading && !error && (\n        <Loader/>\n      )}\n        <ContactList />\n        <ToastContainer autoClose={2500} limit={3} />\n  </div>\n\n  );\n}"],"names":["selectIsLoading","state","contacts","isLoading","selectError","error","selectContactsList","items","Form","styled","Label","Input","Button","dispatch","useDispatch","useSelector","title","onSubmit","e","preventDefault","form","target","name","value","number","find","el","toast","addContacts","reset","type","pattern","required","List","ListItem","ButtonDelete","WarningText","defaultMessage","length","map","id","onClick","deleteContacts","htmlFor","onChange","filterContacts","Loader","PhoneBookApp","useEffect","fetchContacts","autoClose","limit"],"sourceRoot":""}