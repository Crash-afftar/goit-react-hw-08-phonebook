{"version":3,"file":"static/js/282.8d110376.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","pages/PhoneBook.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.search;\nexport const selectContactsList = state => state.contacts.items;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 80%;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 20px 10px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 20px;\n  background-color: #fff;\n  outline: none;\n  transition: all 0.5s ease 0s;\n\n  &:hover {\n    background-color: #d9dae0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 10px 20px;\n  margin: 0px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(20, 58, 46);\n  color: rgb(255, 255, 255);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.2;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: all 0.5s ease 0s;\n \n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: rgb(20, 58, 46);\n  }\n\n  &:active {\n    scale: 1.1  ;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\n\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  function handleSubmit(e)  {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const number  = form.number.value;\n    \n    if (contacts.find(el => el.number === number)) {\n      return toast.warn(`${name} is already in contacts.`);\n    } \n\n    dispatch(addContacts({ name, number }));\n    \n    form.reset();\n  };\n\n  return (\n    <><ToastContainer />\n    <Form title=\"Phonebook\" onSubmit={handleSubmit}>\n      <Label>\n        Name:\n      <Input        \n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([\\' -])[a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      </Label>\n      <Label>\n        Number:\n      <Input        \n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n      </Form>\n      </>\n  );\n};\n\nexport default ContactForm;\n\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 80%;\n  padding: 10px;\n  margin: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 5px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 15px;\n\n  background-color: #fff;\n  transition: 0.5s;\n\n  &:hover {\n    background-color: #d9dae0;\n  }\n`;\nexport const ButtonDelete = styled.button`\n  display: inline-block;\n  padding: 5px;\n\n  margin: 0;\n  border: none; \n  border-radius: 50%;\n  background-color: rgb(20, 58, 46);\n  color: rgb(255, 255, 255);\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.0;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: all 0.5s ease 0s;\n  \n\n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: rgb(255, 0, 0);\n  }\n\n\n  \n  &:active {\n    scale: 1.1;\n  }\n`;\n\nexport const WarningText = styled.h3`\n  margin: 0 auto;\n`;","import { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { List, ListItem, ButtonDelete, WarningText } from './ContactList.styled';\nimport { selectContactsList, selectFilter  } from 'redux/contacts/selectors';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContactsList);\n\n  const filtredContacts = useMemo(() => {\n    if (!filter) {\n      return contacts;\n    }\n\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }, [contacts, filter]);\n  \n  const defaultMessage = contacts.length === 0;\n  return (\n      <>\n    <List>\n      {defaultMessage && (\n        <WarningText>There are currently no contacts in your Phonebook</WarningText>\n      )}\n\n      {filtredContacts.map(({ name, number, id }) => (\n        <ListItem key={id}>\n          <span>{`${name}: ${number}`}</span>\n          <ButtonDelete\n            type=\"button\"\n            onClick={() => {  \n              dispatch(deleteContacts(id));\n            }}\n          >\n            X\n          </ButtonDelete>\n        </ListItem>\n      ))}\n      </List>\n      </>\n      );\n      \n};\n\nexport default ContactList;","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 50%;\n  padding: 0;\n    margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 15px;\n  background-color: #fff;\n  transition: 0.5s;\n  outline: none;\n\n  &:hover {\n    background-color: #d9dae0;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { Label, Input } from './ContactFilter.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst ContactFilter = () => {\n  \n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const { value } = e.target;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n   \n      <Label htmlFor=\"filter\">Find contacts by name:\n      <Input\n        id=\"filter\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleFilterChange}\n        required\n      />\n    </Label>\n  );\n};\n\nexport default ContactFilter;","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactFilter from 'components/ContactFilter/ContactFilter';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import { selectError, selectIsLoading, selectFilter } from 'redux/contacts/selectors';\n// import { Loader } from 'components/Loader/Loader.styled';\n\nexport default function PhoneBookApp() {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n  <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n      <ContactFilter/>\n      <ContactList/>\n        <ToastContainer autoClose={2500} limit={3} />\n  </div>\n\n  );\n}"],"names":["selectFilter","state","filter","search","selectContactsList","contacts","items","Form","styled","Label","Input","Button","dispatch","useDispatch","useSelector","title","onSubmit","e","preventDefault","form","target","name","value","number","find","el","toast","addContacts","reset","type","pattern","required","List","ListItem","ButtonDelete","WarningText","filtredContacts","useMemo","toLowerCase","includes","trim","defaultMessage","length","map","id","onClick","deleteContacts","htmlFor","onChange","filterContacts","PhoneBookApp","useEffect","fetchContacts","autoClose","limit"],"sourceRoot":""}