{"version":3,"file":"static/js/282.bf27f2a0.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","pages/PhoneBook.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.search;\nexport const selectContactsList = state => state.contacts.items;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 80%;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 20px 10px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 20px;\n  background-color: #fff;\n  outline: none;\n  transition: all 0.5s ease 0s;\n\n  &:hover {\n    background-color: #d9dae0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 10px 20px;\n  margin: 0px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(20, 58, 46);\n  color: rgb(255, 255, 255);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.2;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: all 0.5s ease 0s;\n \n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: rgb(20, 58, 46);\n  }\n\n  &:active {\n    scale: 1.1  ;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const phone = form.elements.number.value;\n    const newContatact = { id: nanoid(), name: name, phone: phone };\n    if (contacts.find(el => el.phone === phone)) {\n      return toast.warn(`${name} is already in contacts.`, {\nposition: \"top-right\",\nautoClose: 500,\nhideProgressBar: false,\ncloseOnClick: true,\npauseOnHover: true,\ndraggable: true,\nprogress: undefined,\ntheme: \"colored\",\n});\n    } else {\n      dispatch(addContacts(newContatact));\n    }\n    form.reset();\n  };\n\n  return (\n    <><ToastContainer />\n    <Form title=\"Phonebook\" onSubmit={handleSubmit}>\n      <Label>\n        Name:\n      <Input\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      </Label>\n       \n      <Label>\n        Number:\n      <Input\n        id=\"number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      </Label>\n\n      <Button type=\"submit\">Add contact</Button>\n      </Form>\n      </>\n  );\n};\n\nexport default ContactForm;\n\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 80%;\n  padding: 10px;\n  margin: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 5px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 15px;\n\n  background-color: #fff;\n  transition: 0.5s;\n\n  &:hover {\n    background-color: #d9dae0;\n  }\n`;\nexport const ButtonDelete = styled.button`\n  display: inline-block;\n  padding: 5px;\n\n  margin: 0;\n  border: none; \n  border-radius: 50%;\n  background-color: rgb(20, 58, 46);\n  color: rgb(255, 255, 255);\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.0;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: all 0.5s ease 0s;\n  \n\n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: rgb(255, 0, 0);\n  }\n\n\n  \n  &:active {\n    scale: 1.1;\n  }\n`;\n\nexport const WarningText = styled.h3`\n  margin: 0 auto;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { List, ListItem, ButtonDelete, WarningText } from './ContactList.styled';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  \n  const defaultMessage = contacts.length === 0;\n  return (\n      <>\n    <List>\n      {defaultMessage && (\n        <WarningText>There are currently no contacts in your Phonebook</WarningText>\n      )}\n\n      {contacts.map(({ name, phone, id }) => (\n        <ListItem key={id}>\n          <span>{`${name}: ${phone}`}</span>\n          <ButtonDelete\n            type=\"button\"\n            onClick={() => {\n              dispatch(deleteContacts(id));\n            }}\n          >\n            X\n          </ButtonDelete>\n        </ListItem>\n      ))}\n      </List>\n      </>\n      );\n      \n};\n\nexport default ContactList;","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 50%;\n  padding: 0;\n    margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 15px;\n  background-color: #fff;\n  transition: 0.5s;\n  outline: none;\n\n  &:hover {\n    background-color: #d9dae0;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Label, Input } from './ContactFilter.styled';\n\nconst ContactFilter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n   \n      <Label htmlFor=\"filter\">Find contacts by name:\n      <Input\n        id=\"filter\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChange}\n        required\n      />\n    </Label>\n  );\n};\n\nexport default ContactFilter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactFilter from 'components/ContactFilter/ContactFilter';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function PhoneBookApp() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 36,\n        color: '#010101',\n      }}\n    >\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <ContactFilter />\n        <ContactList />\n        <ToastContainer autoClose={2500} limit={3} />\n      </div>\n    </div>\n  );\n}"],"names":["selectFilter","state","filter","search","selectContactsList","contacts","items","Form","styled","Label","Input","Button","dispatch","useDispatch","useSelector","title","onSubmit","e","preventDefault","form","target","name","elements","value","phone","number","newContatact","id","nanoid","find","el","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","addContacts","reset","type","pattern","required","List","ListItem","ButtonDelete","WarningText","defaultMessage","length","map","onClick","deleteContacts","htmlFor","onChange","filterContacts","PhoneBookApp","useEffect","fetchContacts","style","height","display","justifyContent","alignItems","fontSize","color","limit"],"sourceRoot":""}